#! /bin/bash
set -e
set -x

# Populate the music_server directory with applications etc. from third-party sources.
# Some Ubuntu Jammy packages needed:  python3 python3.11-venv libgirepository1.0-dev.

# Versions to be downloaded and installed.
QUODLIBET_BRANCH=jwd-customizations
CAMILLADSP_RELEASE=v3.0.1
CAMILLAGUI_BACKEND_RELEASE=v3.0.3

# Pick up global environment definitions.
source env.sh

# Clean up any previous installations.
rm -rf "$PYTHON_ENVIRONMENT" "$QUOD_LIBET_DIR" "$CAMILLADSP_DIR"/bin "$CAMILLADSP_DIR"/camillagui-backend

# Place for log files.
mkdir -p $LOGS

# Create a Python virtual environment based on the current default Python. 
python3 -m venv "$PYTHON_ENVIRONMENT"

# Activate the virtual environment for this shell session
source "$PYTHON_ENVIRONMENT/bin/activate"

# Install Quod Libet from my private fork.
git clone https://github.com/jdykstra/quodlibet.git -b $QUODLIBET_BRANCH

# install Quod Libet dependencies.
# Poetry-plugin-export is needed for at least Jammy and later.
pushd quodlibet
pip install poetry poetry-plugin-export
poetry env use "$(which python3)"
poetry export > /tmp/requirements.txt
pip install -r /tmp/requirements.txt
popd 

# Install Camilladsp from the official release.
mkdir -p "$CAMILLADSP_DIR"/bin 
wget -O /tmp/tarball.tgz https://github.com/HEnquist/camilladsp/releases/download/"$CAMILLADSP_RELEASE"/camilladsp-linux-amd64.tar.gz
tar -xzf /tmp/tarball.tgz -C "$CAMILLADSP_DIR/bin/"

# Install Camilladsp's GUI backend from the official release.
mkdir -p "$CAMILLADSP_DIR"/camillagui-backend 
wget -O /tmp/tarball.zip https://github.com/HEnquist/camillagui-backend/releases/download/"$CAMILLAGUI_BACKEND_RELEASE"/camillagui.zip
unzip /tmp/tarball.zip -d "$CAMILLADSP_DIR"/camillagui-backend/

# Copy our custom config file for Camilladsp's GUI into its final directory.
# We do this because the config file contained in the GUI release 
# tarball uses relative pathnames.  Leave the original file in  place so 
# we don't accidentally remove it when updating the repository.
cp files_to_be_copied/jwd_camillagui.yml "$CAMILLADSP_DIR"/camillagui-backend/config/camillagui.yml

# Install camilladsp-backend's dependencies.
python3 -m pip install -r "$CAMILLADSP_DIR"/camillagui-backend/requirements.txt   

# The snap version of Firefox does not work well without a real session,
# so use the conventional install directly from Mozilla.
# We need to specify a version because Ubuntu prioritizes the snap alternative.
sudo add-apt-repository ppa:mozillateam/ppa
sudo apt update
# Get the latest deb version of Firefox from the PPA (not the SNAP)
LATEST_FIREFOX_VERSION=$(apt-cache policy firefox | awk '/https:\/\/ppa.launchpadcontent.net\/mozillateam\/ppa/ {print v} {v=$1}' | head -n 1)
sudo apt install -y --allow-downgrades --allow-change-held-packages firefox="$LATEST_FIREFOX_VERSION"
sudo snap remove firefox
sudo apt-mark hold firefox

echo "**********  Install Completed Successfully  **********"
